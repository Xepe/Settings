VAGRANTFILE_API_VERSION = "2"  
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  config.vm.define "postgres" do |v|
    v.vm.provider "docker" do |d|
      d.image = "paintedfox/postgresql"
      d.volumes = ["/var/docker/postgresql:/data"]
	  d.ports = ["5432:5432"]
      d.env = {
        USER: "root",
        PASS: "abcdEF123456",
        DB: "root"
      }
      d.vagrant_vagrantfile = "../Dev/Vagrantfile"
    end
  end
  
  config.vm.define "app" do |v|
    v.vm.provider "docker" do |d|
      d.build_dir = "."
      d.has_ssh = true
      d.ports = ["80:8080"]
      d.cmd     = ["/sbin/my_init", "--enable-insecure-key"]
      d.vagrant_vagrantfile = "../Dev/Vagrantfile"
    end
    v.ssh.username = "root"                                                                                                                                       
    v.ssh.private_key_path = "phusion.key"      
  end

  config.vm.define "mongo" do |mongo|
    mongo.vm.provider "docker" do |d|
	  d.image = "dockerfile/mongodb"
	  d.name = "faranduling_web_mongo"
      d.ports = ["27017:27017"]
      d.vagrant_vagrantfile = "./Vagrantfile.proxy"
	  d.remains_running = true
    end
    #mongo.vm.synced_folder "./mongo/data", "/data/db", mount_options: ["dmode=775,fmode=664"]
  end
  
  config.vm.define "nginx" do |nginx|
        nginx.vm.provider "docker" do |d|
            d.image = "dockerfile/nginx"
            d.name = "faranduling_web_nginx"
            d.ports = ['80:80', '443:443']
			d.vagrant_vagrantfile = "./Vagrantfile.proxy"
	        d.remains_running = true
        end

        nginx.vm.synced_folder "./nginx/sites-enabled", "/etc/nginx/sites-enabled"
        nginx.vm.synced_folder "./nginx/log", "/var/log/nginx"
        nginx.vm.synced_folder "./app", "/vagrant"
    end

end  
